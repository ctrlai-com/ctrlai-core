name: Python Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        poetry --version
    
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
    
    - name: Install dependencies
      run: |
        poetry install --no-interaction --with dev
      timeout-minutes: 5
      
    - name: Format code
      run: |
        poetry run black .
        poetry run isort .
      
    - name: Run tests
      run: poetry run pytest
      timeout-minutes: 3
      
    - name: Check formatting
      run: |
        poetry run black . --check
        poetry run isort . --check
      timeout-minutes: 2
        
    - name: Type checking
      run: poetry run mypy validation
      timeout-minutes: 2

    - name: Lint
      run: poetry run flake8 validation tests --max-line-length=120 --extend-ignore=E203 --exclude=.git,__pycache__,build,dist
      timeout-minutes: 2

    - name: Commit formatting changes
      if: github.event_name == 'pull_request'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Apply code formatting" || echo "No changes to commit"
        git push || echo "No changes to push" 